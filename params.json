{
  "name": "Popupbox",
  "tagline": "All things that pops up!",
  "body": "# Popupbox\r\n\r\nA sensible popupbox, just see the example here and use it. No weird syntax. All the shadow and anything inside is for you to do on our will. This module will place the `thing` you made along with an arrow where it should be.\r\nOne assumption that is made is that your popup box will be bigger than the target.\r\n\r\n\r\n# Usage\r\n* Include the files `popupbox.js` and `popupbox.css` in your project.\r\n\r\n* Now you have to have this div structure somewhere in your html and put your **content to be displayed inside the inner div**.\r\n    ```html\r\n    <div class='popupbox'>\r\n        <div id=\"popupboxcontent\">\r\n            Thing that will come up in the popup\r\n        </div>\r\n    </div>\r\n    ```\r\n    Don't change the outer div class, but change the inner div's id to whatever you want it to be. All the linking is done in `js`.\r\n\r\n## displayPopup\r\nThis is used to show a simple popup window with or without an arrow to accompany it.\r\nThe function definition is like this:\r\n```js\r\ndisplayPopup(base, popupcontent, popupXLocation = 'middle', popupYLocation = 'below', arrow = true, arrowColor ='white', arrowSize = '7')\r\n```\r\n```\r\nOptions\r\n   popupXLocation : left, right, middle\r\n   popupYLocation : above, below\r\n```\r\nNow you can call this as and when you need, by default it is assumed to be removed on clicking outside the popup.\r\n\r\nExample : \r\n```js\r\n$('#button').click(function(e){\r\n    e.stopPropagation();\r\n    displayPopup('#button', '#popupboxcontent');\r\n});\r\n```\r\n\r\nYou can also use this to implement a **popup on mouse hover**, like this : \r\n```js\r\n$('#button').hover(function(e){\r\n    e.stopPropagation();\r\n    displayPopup('#button', '#popupboxcontent', 'left', 'above', true, 'black');\r\n},\r\nfunction(e){\r\n    e.stopPropagation();\r\n    removePopup('#popupboxcontent');\r\n});\r\n```\r\nThe `removePopup()` function only takes one value, ie the id of the div of the `popupboxcontent`\r\n\r\n### Screen shot\r\n![popupBox](http://i.imgur.com/3CTc5pn.png)\r\n\r\n## displayFullScreenPopup\r\nThis is used, as the name suggest to display a full screen popup - kinda like a model in bootstrap\r\n\r\nThis is how the function definition looks like:\r\n```js\r\ndisplayFullScreenPopup(popupcontent, overrideOutsideClick=false, backgound = true, backgoundOpacity = 0.9, backgoundColor = '256, 256, 256')\r\n```\r\nLike the native implementation of popupBox it will be removed on clicking anywhere outside the popup, but you can override it by setting overrideOutsideClick to true.\r\n\r\nYou can call this like :\r\n```js\r\n$('#button').click(function(e){\r\n    e.stopPropagation();\r\n    displayFullScreenPopup('#popupboximagecontent');\r\n});\r\n```\r\n### Screen shot\r\n![fullScreenPopup](http://i.imgur.com/V9D7Nrp.png)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}